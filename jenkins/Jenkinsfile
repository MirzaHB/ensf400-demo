pipeline {
    agent any
     
    environment {
        DOCKER_IMAGE =  'mohamadhammoud1/ensf400-final'   
    }
     

    stages {
        stage('Checkout') { 
            steps {
                checkout scm
            }
        }
        
        stage('Unit Tests') {
            steps {
                script {
                    docker.image('gradle:7.5.1-jdk11').inside {
                        sh './gradlew test'
                        }
                    }
                }
            post {
                always {
                    junit 'build/test-results/test/*.xml'
                    }
                }
            
            }
        stage('Database Tests') {
            steps {
                script {
                    docker.image('gradle:7.5.1-jdk11').inside {
                        sh './gradlew integrate'
                        }
                    }
                }
            post {
                always {
                     junit 'build/test-results/integrate/*.xml'
                    }
                }
            
            }
            stage('BDD Tests') {
            steps {
                script {
                    docker.image('gradle:7.5.1-jdk11').inside {
                        sh './gradlew generateCucumberReports'
                        sh './gradlew jacocoTestReport'
                        }
                    }
                }
            post {
                always {
                     junit 'build/test-results/bdd/*.xml'
                    }
                }
            
            }

        stage('Docker Build') {
            steps {
                script {
                   
                     def commitHash = env.GIT_COMMIT.take(7)
                     def taggedImage = "${DOCKER_IMAGE}:${commitHash}"
                    docker.build("${taggedImage}")
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                script {
                    // Login to DockerHub using credentials stored in Jenkins
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        docker.image("${DOCKER_IMAGE}").push()
                    }
                }
            }
        }
    }
}




