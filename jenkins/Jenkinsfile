pipeline {
    agent any
     
    environment {
        // Define DockerHub image name
        DOCKER_IMAGE =  'mohamadhammoud1/ensf400-final'
       
         
    }

    stages {
        stage('Checkout') {
            when {
                changeRequest()
            }
            steps {
                checkout scm
            }
        }
        
   


        stage('Check Java Version') {
                steps {
                        sh 'java -version' 
                        sh 'docker --version' 
                    }
        }
        stage('Unit Tests') {
            steps {
                script {
                    docker.image('gradle:7.5.1-jdk11').inside {
                        sh './gradlew test'
                        }
                    }
                }
            post {
                always {
                    junit 'build/test-results/test/*.xml'
                    }
                }
            
            }
        stage('Database Tests') {
            steps {
                script {
                    docker.image('gradle:7.5.1-jdk11').inside {
                        sh './gradlew integrate'
                        }
                    }
                }
            post {
                always {
                     junit 'build/test-results/integrate/*.xml'
                    }
                }
            
            }
            stage('BDD Tests') {
            steps {
                script {
                    docker.image('gradle:7.5.1-jdk11').inside {
                        sh './gradlew generateCucumberReports'
                        // generate the code coverage report for jacoco
                        sh './gradlew jacocoTestReport'
                        }
                    }
                }
            post {
                always {
                     junit 'build/test-results/bdd/*.xml'
                    }
                }
            
            }
            // stage('Static Analysis') {
            // steps {
            //     script {
            //         docker.image('gradle:7.5.1-jdk11').inside {
            //             sh './gradlew sonarqube'
            //             sleep 5
            //             sh './gradlew checkQualityGate'
            //             }
            //         }
            //     }
            // }
        
        

        stage('Docker Build') {
            steps {
                script {
                    // Build the Docker image
                    docker.build("${DOCKER_IMAGE}")
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                script {
                    // Login to DockerHub using credentials stored in Jenkins
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        docker.image("${DOCKER_IMAGE}").push()
                    }
                }
            }
        }
    }
}




